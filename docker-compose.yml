version: '3.8'

services:
  estimake-server:
    build:
      context: ./server
    restart: unless-stopped
    networks:
      - dokploy-network
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dokploy-network"
      # --- API and WebSocket Routing ---
      - "traefik.http.routers.estimake-api.rule=Host(`estimake.yourdomain.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.estimake-api.entrypoints=websecure"
      - "traefik.http.routers.estimake-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.estimake-api.loadbalancer.server.port=8080"

  estimake-frontend:
    build:
      context: ./frontend
      args:
        # These are build-time arguments passed to the SvelteKit frontend
        GO_SERVER_ADDRESS: http://estimake-server:8080
        WEBSOCKET_ADDRESS: ws://estimake-server:8080/api/ws
    restart: unless-stopped
    networks:
      - dokploy-network
    depends_on:
      estimake-server:
        condition: service_healthy
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=dokploy-network"
      # --- Main Application Routing ---
      - "traefik.http.routers.estimake-app.rule=Host(`estimake.yourdomain.com`)"
      - "traefik.http.routers.estimake-app.entrypoints=websecure"
      - "traefik.http.routers.estimake-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.estimake-app.loadbalancer.server.port=3000"

networks:
  dokploy-network:
    external: true
